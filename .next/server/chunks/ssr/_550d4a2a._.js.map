{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VSCODE/student-feedback-app/student-feedback-app/src/utils/api.ts"],"sourcesContent":["import { createTRPCReact } from \"@trpc/react-query\";\r\nimport type { AppRouter } from \"~/server/api/root\";\r\n\r\nexport const api = createTRPCReact<AppRouter>();\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAGO,MAAM,MAAM,CAAA,GAAA,oKAAA,CAAA,kBAAe,AAAD","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VSCODE/student-feedback-app/student-feedback-app/src/app/page.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { api } from \"~/utils/api\"; // tRPC hooks\nimport { toast } from \"react-hot-toast\";\n\nexport default function StudentsPage() {\n  const [name, setName] = useState(\"\");\n  const [studentId, setStudentId] = useState(\"\");\n  const [grade, setGrade] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Fetch students\n  const { data: students, refetch } = api.student.getAll.useQuery();\n\n  // Create student mutation\n  const createStudent = api.student.create.useMutation({\n    onSuccess: () => {\n      toast.success(\"Student added!\");\n      refetch();\n      setName(\"\");\n      setStudentId(\"\");\n      setGrade(\"\");\n    },\n    onError: () => toast.error(\"Failed to add student\"),\n  });\n\n  // Generate feedback mutation\n  const generateFeedback = api.feedback.generateFeedback.useMutation({\n    onSuccess: (data) => {\n      toast.success(\"Feedback generated!\");\n      alert(`Generated Feedback:\\n${data.content}`);\n    },\n    onError: () => toast.error(\"Failed to generate feedback\"),\n  });\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">Student Management</h1>\n\n      {/* Add Student Form */}\n      <div className=\"mb-6\">\n        <h2 className=\"text-lg font-semibold\">Add Student</h2>\n        <input\n          className=\"border p-2 w-full mb-2\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          className=\"border p-2 w-full mb-2\"\n          placeholder=\"Student ID\"\n          value={studentId}\n          onChange={(e) => setStudentId(e.target.value)}\n        />\n        <input\n          className=\"border p-2 w-full mb-2\"\n          placeholder=\"Grade\"\n          value={grade}\n          onChange={(e) => setGrade(e.target.value)}\n        />\n        <button\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n          onClick={() => createStudent.mutate({ name, studentId, grade })}\n          disabled={loading}\n        >\n          {loading ? \"Adding...\" : \"Add Student\"}\n        </button>\n      </div>\n\n      {/* Student List */}\n      <h2 className=\"text-lg font-semibold mb-2\">Student List</h2>\n      {students?.length ? (\n        <ul className=\"border p-4\">\n          {students.map((student) => (\n            <li key={student.id} className=\"border-b p-2 flex justify-between\">\n              <span>{student.name} (Grade: {student.grade})</span>\n              <button\n                className=\"bg-green-500 text-white px-3 py-1 rounded\"\n                onClick={() =>\n                  generateFeedback.mutate({\n                    studentId: student.id,\n                    feedbackType: \"improvement\",\n                  })\n                }\n              >\n                Generate Feedback\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No students found.</p>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA,wMAAmC,aAAa;;;;;;;;;;AAGjC,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,iBAAiB;IACjB,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,EAAE,GAAG,mHAAA,CAAA,MAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ;IAE/D,0BAA0B;IAC1B,MAAM,gBAAgB,mHAAA,CAAA,MAAG,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC;QACnD,WAAW;YACT,MAAM,OAAO,CAAC;YACd;YACA,QAAQ;YACR,aAAa;YACb,SAAS;QACX;QACA,SAAS,IAAM,MAAM,KAAK,CAAC;IAC7B;IAEA,6BAA6B;IAC7B,MAAM,mBAAmB,mHAAA,CAAA,MAAG,CAAC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,CAAC;QACjE,WAAW,CAAC;YACV,MAAM,OAAO,CAAC;YACd,MAAM,CAAC,qBAAqB,EAAE,KAAK,OAAO,EAAE;QAC9C;QACA,SAAS,IAAM,MAAM,KAAK,CAAC;IAC7B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BAGxC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAwB;;;;;;kCACtC,8OAAC;wBACC,WAAU;wBACV,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;kCAEzC,8OAAC;wBACC,WAAU;wBACV,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;kCAE9C,8OAAC;wBACC,WAAU;wBACV,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;kCAE1C,8OAAC;wBACC,WAAU;wBACV,SAAS,IAAM,cAAc,MAAM,CAAC;gCAAE;gCAAM;gCAAW;4BAAM;wBAC7D,UAAU;kCAET,UAAU,cAAc;;;;;;;;;;;;0BAK7B,8OAAC;gBAAG,WAAU;0BAA6B;;;;;;YAC1C,UAAU,uBACT,8OAAC;gBAAG,WAAU;0BACX,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;wBAAoB,WAAU;;0CAC7B,8OAAC;;oCAAM,QAAQ,IAAI;oCAAC;oCAAU,QAAQ,KAAK;oCAAC;;;;;;;0CAC5C,8OAAC;gCACC,WAAU;gCACV,SAAS,IACP,iBAAiB,MAAM,CAAC;wCACtB,WAAW,QAAQ,EAAE;wCACrB,cAAc;oCAChB;0CAEH;;;;;;;uBAVM,QAAQ,EAAE;;;;;;;;;qCAiBvB,8OAAC;0BAAE;;;;;;;;;;;;AAIX","debugId":null}}]
}