{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VSCODE/aa/student-feedback-app/src/utils/api.ts"],"sourcesContent":["import { createTRPCReact } from \"@trpc/react-query\";\r\nimport type { AppRouter } from \"~/server/api/root\";\r\n\r\nexport const api = createTRPCReact<AppRouter>();\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAGO,MAAM,MAAM,CAAA,GAAA,oKAAA,CAAA,kBAAe,AAAD","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VSCODE/aa/student-feedback-app/src/app/NavigationBar/page.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nexport const NavigationBar: React.FC = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <button className=\"bg-blue-400 text-white px-2 p-2 py-1 rounded\" onClick={() => window.location.href = '/AddStudent'}>Add Student</button>\r\n      <button className=\"bg-blue-400 text-white px-2 p-2 py-1 rounded\" onClick={() => window.location.href = '/AllStudent'}>All Students</button>\r\n      <button className=\"bg-blue-400 text-white px-2 p-2 py-1 rounded\" onClick={() => window.location.href = '/SearchStudent'}>Search Student</button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavigationBar; // This is the default export"],"names":[],"mappings":";;;;;;AAEO,MAAM,gBAA0B;IACrC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;gBAA+C,SAAS,IAAM,OAAO,QAAQ,CAAC,IAAI,GAAG;0BAAe;;;;;;0BACtH,8OAAC;gBAAO,WAAU;gBAA+C,SAAS,IAAM,OAAO,QAAQ,CAAC,IAAI,GAAG;0BAAe;;;;;;0BACtH,8OAAC;gBAAO,WAAU;gBAA+C,SAAS,IAAM,OAAO,QAAQ,CAAC,IAAI,GAAG;0BAAkB;;;;;;;;;;;;AAG/H;uCAEe;CAAe,6BAA6B","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VSCODE/aa/student-feedback-app/src/app/SearchStudent/page.tsx"],"sourcesContent":["\r\n\r\nimport { useState } from \"react\";\r\nimport { api } from \"~/utils/api\"; // Ensure this points to your tRPC API\r\nimport NavigationBar from '../NavigationBar/page';\r\n\r\nconst validFeedbackTypes = [\"improvement\", \"strengths\", \"parentConference\"] as const;\r\ntype FeedbackType = typeof validFeedbackTypes[number];\r\n\r\nconst isValidFeedbackType = (value: string): value is FeedbackType => {\r\n  return validFeedbackTypes.includes(value as any);\r\n};\r\n\r\nconst SearchStudent = () => {\r\n  const [studentId, setStudentId] = useState(\"\");\r\n  const [feedbackType, setFeedbackType] = useState<FeedbackType | \"\">(\"\");\r\n\r\n  const generateFeedback = api.feedback.generateFeedback.useMutation(); // âœ… Moved inside component\r\n\r\n  const handleGenerateFeedback = () => {\r\n    if (!studentId || !feedbackType) {\r\n      alert(\"Please enter a valid Student ID and Feedback Type.\");\r\n      return;\r\n    }\r\n    generateFeedback.mutate({\r\n      studentId : studentId,\r\n      feedbackType: feedbackType,\r\n    });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <NavigationBar /> {/* Ensure this component exists */}\r\n      <h1 className=\"text-xl font-bold mb-4\">Search Student</h1>\r\n      <input\r\n        type=\"text\"\r\n        className=\"border p-2 w-full mb-2\"\r\n        placeholder=\"Enter Student ID\"\r\n        value={studentId}\r\n        onChange={(e) => setStudentId(e.target.value)}\r\n      />\r\n      <select\r\n        className=\"border p-2 w-full mb-2\"\r\n        value={feedbackType}\r\n        onChange={(e) => {\r\n          const value = e.target.value;\r\n          if (isValidFeedbackType(value)) {\r\n            setFeedbackType(value);\r\n          }\r\n        }}\r\n      >\r\n        <option value=\"\">Select Feedback Type</option>\r\n        {validFeedbackTypes.map((type) => (\r\n          <option key={type} value={type}>{type}</option>\r\n        ))}\r\n      </select>\r\n      <button\r\n        className=\"bg-blue-500 text-white px-3 py-2 rounded\"\r\n        onClick={() =>\r\n          generateFeedback.mutate({\r\n            studentId : studentId,\r\n            feedbackType : \"improvement\",\r\n          })\r\n        }\r\n        disabled={!studentId || !feedbackType}\r\n      >\r\n        Generate Feedback\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchStudent;\r\n"],"names":[],"mappings":";;;;AAEA;AACA,wMAAmC,sCAAsC;AACzE;;;;;AAEA,MAAM,qBAAqB;IAAC;IAAe;IAAa;CAAmB;AAG3E,MAAM,sBAAsB,CAAC;IAC3B,OAAO,mBAAmB,QAAQ,CAAC;AACrC;AAEA,MAAM,gBAAgB;IACpB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB;IAEpE,MAAM,mBAAmB,mHAAA,CAAA,MAAG,CAAC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,IAAI,2BAA2B;IAEjG,MAAM,yBAAyB;QAC7B,IAAI,CAAC,aAAa,CAAC,cAAc;YAC/B,MAAM;YACN;QACF;QACA,iBAAiB,MAAM,CAAC;YACtB,WAAY;YACZ,cAAc;QAChB;IACF;IAGA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,oIAAA,CAAA,UAAa;;;;;YAAG;0BACjB,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8OAAC;gBACC,MAAK;gBACL,WAAU;gBACV,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;0BAE9C,8OAAC;gBACC,WAAU;gBACV,OAAO;gBACP,UAAU,CAAC;oBACT,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;oBAC5B,IAAI,oBAAoB,QAAQ;wBAC9B,gBAAgB;oBAClB;gBACF;;kCAEA,8OAAC;wBAAO,OAAM;kCAAG;;;;;;oBAChB,mBAAmB,GAAG,CAAC,CAAC,qBACvB,8OAAC;4BAAkB,OAAO;sCAAO;2BAApB;;;;;;;;;;;0BAGjB,8OAAC;gBACC,WAAU;gBACV,SAAS,IACP,iBAAiB,MAAM,CAAC;wBACtB,WAAY;wBACZ,cAAe;oBACjB;gBAEF,UAAU,CAAC,aAAa,CAAC;0BAC1B;;;;;;;;;;;;AAKP;uCAEe","debugId":null}}]
}